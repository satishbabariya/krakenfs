# KrakenFS Example Configuration
# Copy this file to your desired location and customize it for your environment

log:
  level: "info"  # Options: debug, info, warn, error

filesystem:
  watch_paths:
    - "/data"  # Paths to monitor for changes
    - "/shared"
  exclude_patterns:
    - "*.tmp"
    - "*.log"
    - ".git"
    - "node_modules"
    - ".DS_Store"
  recursive: true  # Monitor subdirectories
  debounce_time: "100ms"  # Debounce file events

sync:
  node_id: "node1"  # Unique identifier for this node
  cluster_nodes:
    - "node1:auto"          # Format: "node_id:ip_address" or "node_id:auto" for auto-detection
    - "node2:auto"          # Use environment variables or auto-detection for dynamic IPs
    - "node3:auto"          # Example: "node1:${NODE1_IP}" or "node1:auto"
  p2p_port: 6881  # P2P communication port
  tracker_port: 6882  # Tracker/coordinator port
  bandwidth:
    enable: true
    egress_bits_per_sec: 1677721600  # 200*8 Mbit (outgoing)
    ingress_bits_per_sec: 2516582400  # 300*8 Mbit (incoming)
  conflict_resolution:
    strategy: "timestamp"  # Options: timestamp, manual, last_write_wins
    timeout: "30s"
  tls:
    enable: false  # Enable TLS/SSL encryption for P2P communication
    cert_file: "/etc/krakenfs/certs/node1.crt"  # Path to certificate file
    key_file: "/etc/krakenfs/certs/node1.key"   # Path to private key file
    ca_file: "/etc/krakenfs/certs/ca.crt"       # Path to CA certificate file (optional)
    verify_peer: false  # Verify peer certificates (requires CA file)
    min_version: "1.2"  # Minimum TLS version (1.2 or 1.3)
    max_version: "1.3"  # Maximum TLS version (1.2 or 1.3)
    insecure_skip_verify: false  # Skip certificate verification (insecure)
  storage:
    path: "/var/lib/krakenfs/data"  # Persistent storage path
  discovery:
    enable: true  # Enable automatic peer discovery via mDNS
    service_name: "_krakenfs._tcp"  # mDNS service name
    domain: "local"  # mDNS domain
  recovery:
    max_retries: 5  # Maximum retry attempts
    initial_delay: "1s"  # Initial delay between retries
    max_delay: "30s"  # Maximum delay between retries
    backoff_multiplier: 2.0  # Exponential backoff multiplier
    reset_after: "5m"  # Reset failure count after this duration
    enable_circuit_breaker: true  # Enable circuit breaker pattern
    circuit_breaker_threshold: 10  # Open circuit after this many failures

volume:
  root_path: "/var/lib/krakenfs/volumes"  # Docker volume storage location
  driver_name: "krakenfs"  # Docker volume driver name

# Security Configuration
security:
  authentication:
    enable: true  # Enable authentication
    type: "jwt"  # Authentication type: "jwt", "ldap", "oauth2"
    # jwt_secret: "REPLACE_WITH_A_STRONG_RANDOM_SECRET"  # JWT signing secret (REQUIRED: set a strong, unique value before production)
    # !!! IMPORTANT: You MUST set 'jwt_secret' to a strong, random value for production deployments.
    # Example: jwt_secret: "A_LONG_RANDOM_STRING_GENERATED_FOR_YOUR_DEPLOYMENT"
    token_expiry: "24h"  # Token expiration time
    bcrypt_cost: 12  # BCrypt cost for password hashing
  
  authorization:
    enable: true  # Enable authorization
    rbac:
      enable: true  # Enable Role-Based Access Control
  
  audit:
    enable: true  # Enable audit logging
    log_file: "/var/log/krakenfs/audit.log"  # Audit log file path
    log_level: "info"  # Audit log level
    format: "json"  # Log format: "json", "text"

# API Configuration
api:
  port: 8080  # API server port
  host: "0.0.0.0"  # API server host (use 127.0.0.1 for localhost only)
  rate_limit:
    requests_per_minute: 60  # Maximum requests per minute per IP
    burst_size: 10  # Burst size for rate limiting
    cleanup_interval: "5m"  # Cleanup interval for rate limiter 